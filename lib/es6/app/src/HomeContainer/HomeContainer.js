// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

import * as Block          from "bs-platform/lib/es6/block.js";
import * as Curry          from "bs-platform/lib/es6/curry.js";
import * as Utils          from "../Utils.js";
import * as React          from "react";
import * as HomeRe         from "./HomeRe.js";
import * as Greeting       from "../Greeting.js";
import * as ReasonReact    from "reason-react/lib/es6/src/reasonReact.js";
import * as HackerNewsData from "../HackerNewsData.js";

var component = ReasonReact.reducerComponent("HomeComponent");

function fetchPosts(reduce) {
  return HackerNewsData.fetchPosts(Curry._1(reduce, (function (data) {
                    return /* HackerData */[data];
                  })));
}

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      HackerNewsData.fetchPosts(Curry._1(self[/* reduce */3], (function (data) {
                  return /* HackerData */[data];
                })));
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (self) {
      var match = self[/* state */4][/* isFetching */1];
      return React.createElement("div", undefined, React.createElement("button", {
                      onClick: (function () {
                          return HackerNewsData.fetchPosts(Curry._1(self[/* reduce */3], (function (data) {
                                            return /* HackerData */[data];
                                          })));
                        })
                    }, Utils.textEl("Refresh")), match !== 0 ? React.createElement("h2", undefined, Utils.textEl("loading...")) : React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Greeting.make(/* array */[])), ReasonReact.element(/* None */0, /* None */0, HomeRe.make(self[/* state */4][/* posts */0], /* array */[]))));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* posts : array */[],
              /* isFetching : true */1
            ];
    });
  newrecord[/* reducer */12] = (function (action, _) {
      return /* Update */Block.__(0, [/* record */[
                  /* posts */action[0],
                  /* isFetching : false */0
                ]]);
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function () {
        return make(/* array */[]);
      }));

export {
  component  ,
  fetchPosts ,
  make       ,
  $$default  ,
  $$default    as default,
  
}
/* component Not a pure module */
